version: '2.2'

services:
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS="http://es01:9200"
    ports:
      - 5601:5601
    networks: {"esnet"}

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: es01
    volumes: ['esdata01:/usr/share/elasticsearch/data']
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.exporters.my_local.type=local
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    healthcheck:
      test: curl -k -s http://localhost:9200 && echo ok || echo fail
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - esnet

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: es02
    volumes: ['esdata02:/usr/share/elasticsearch/data']
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.exporters.my_local.type=local
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks: {"esnet"}

  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    command: /usr/bin/true
    depends_on: {"es01": {"condition": "service_healthy"}}

volumes: {"esdata01", "esdata02"}
networks: {"esnet"}
