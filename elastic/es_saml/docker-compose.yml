version: '2.2'

services:
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    container_name: kibana
    volumes: ['certs:/tmp/certs', './kibana.yml:/usr/share/kibana/config/kibana.yml']
    ports:
      - 5601:5601
    networks: {"esnet"}

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: es01
    volumes: ['esdata01:/usr/share/elasticsearch/data', 'certs:$CERTS_DIR', './users:/usr/share/elasticsearch/config/users', './users_roles:/usr/share/elasticsearch/config/users_roles', 'metadata:$CERTS_DIR/metadata']
    depends_on: {"saml": {"condition": "service_healthy"}}
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01
      - cluster.name=test-saml
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.exporters.my_local.type=local
      #- xpack.monitoring.exporters.mon_clu.type=http
      #- xpack.monitoring.exporters.mon_clu.host=http://es02:9200
      - xpack.license.self_generated.type=trial 
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.authc.realms.file.file1.order=3
      - xpack.security.authc.realms.saml.saml1.order=2
      - xpack.security.authc.realms.saml.saml1.idp.metadata.path=$CERTS_DIR/metadata/metadata.xml
      - xpack.security.authc.realms.saml.saml1.idp.entity_id=http://saml:8080/simplesaml/saml2/idp/metadata.php
      - xpack.security.authc.realms.saml.saml1.sp.entity_id="http://kibana/"
      - xpack.security.authc.realms.saml.saml1.sp.acs="http://kibana/api/security/v1/saml"
      - xpack.security.authc.realms.saml.saml1.sp.logout="http://kibana/logout"
      - xpack.security.authc.realms.saml.saml1.attributes.principal="urn:oid:0.9.2342.19200300.100.1.1"
      - xpack.security.authc.realms.saml.saml1.attributes.groups="urn:oid:1.3.6.1.4.1.5923.1.5.1."
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    healthcheck:
      test: "curl -k -s https://localhost:9200 && echo ok || echo fail"
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - esnet

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: es02
    volumes: ['esdata02:/usr/share/elasticsearch/data', 'certs:$CERTS_DIR', 'metadata:$CERTS_DIR/metadata']
    depends_on: {"saml": {"condition": "service_healthy"}}
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=test-saml
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.monitoring.collection.enabled=true
      - xpack.monitoring.exporters.my_local.type=local
      #- xpack.monitoring.exporters.mon_clu.type=http
      #- xpack.monitoring.exporters.mon_clu.host=http://es01:9200
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es02/es02.key
      - xpack.security.authc.realms.saml.saml1.order=2
      - xpack.security.authc.realms.saml.saml1.idp.metadata.path=$CERTS_DIR/metadata/metadata.xml
      - xpack.security.authc.realms.saml.saml1.idp.entity_id=http://saml:8080/simplesaml/saml2/idp/metadata.php
      - xpack.security.authc.realms.saml.saml1.sp.entity_id="http://kibana/"
      - xpack.security.authc.realms.saml.saml1.sp.acs="http://kibana/api/security/v1/saml"
      - xpack.security.authc.realms.saml.saml1.sp.logout="http://kibana/logout"
      - xpack.security.authc.realms.saml.saml1.attributes.principal="urn:oid:0.9.2342.19200300.100.1.1"
      - xpack.security.authc.realms.saml.saml1.attributes.groups="urn:oid:1.3.6.1.4.1.5923.1.5.1."
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: >
        bash -c 'curl -k -s https://localhost:9200 && curl -s http://saml:8080/simplesaml/saml2/idp/metadata.php > /tmp/metadata.xml || /usr/bin/false'
      interval: 30s
      timeout: 10s
      retries: 5
    networks: {"esnet"}

  saml:
    image: kristophjunge/test-saml-idp
    container_name: saml
    environment:
      - SIMPLESAMLPHP_SP_ENTITY_ID=http://app.example.com
      - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://saml/simplesaml/module.php/saml/sp/saml2-acs.php/test-sp
      - SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://saml/simplesaml/module.php/saml/sp/saml2-logout.php/test-sp
    ports:
      - 8080:8080 
      - 8443:8443
    healthcheck:
      test: "curl -s http://saml:8080/simplesaml/saml2/idp/metadata.php && echo ok || echo fail"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
    volumes: ["metadata:/metadata"]
    networks: {"esnet"}

  create_metadata:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    container_name: creating_metada
    command: >
      bash -xc '
      curl -s http://saml:8080/simplesaml/saml2/idp/metadata.php > /metadata/metadata.xml;
      cat /metadata/metadata.xml;
      chmod -vR 777 /metadata;
      chown -vR 1000:0 /metadata;
      '
    networks: {"esnet"}
    volumes: ["metadata:/metadata"]
    depends_on: {"saml": {"condition": "service_healthy"}}

volumes: {"esdata01", "esdata02", "certs", "metadata"}
networks: {"esnet"}
